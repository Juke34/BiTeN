// Comment start by // characters or /* ... */

manifest {
    name = 'Name of your pipeloine'
    author = 'Your name'
    homePage = 'path_to_the_repository_that_contains_your_pipeline'
    description = 'Purpose  of your pipeline'
    // This is the file called when executing your pipeline. The standard name is main.nf but you may decide to name this main file differently.
    mainScript = 'main.nf'
    nextflowVersion = '>=22.04.0' // Nextflow version to use to run your pipeline. 
    version = '0.1' // Version of your pipeline 
}


// default parameters
params {
    // to store general information about pipeline execution
    pipeline_report="pipeline_report"
}

/*
* A profile is a set of configuration attributes that can be selected during pipeline execution 
* by using the -profile command line option. Configuration profiles are defined by using the 
* special scope profiles, which group the attributes that belong to the same profile using a common prefix.
* Here we have a several profiles: hpc, debug, docker, etc. They can be combined by using the -profile command line option.
*/
profiles {

    // Tell to use slurm scheduler on the case of usage on hpc
    // and set specific parameters (hpc.config and softwares.config)
    hpc {
        executor {
            name = 'slurm'
        }
        process {
            scratch = '$SNIC_TMP'
        }
        includeConfig "$baseDir/config/hpc.config"
        singularity.enabled = true
        // singularity.envWhitelist = '' // Comma separated list of environment variable names to be included in the container environment.
        includeConfig "$baseDir/config/softwares.config"
        scratch = '/scratch'
    }

    // Print environement variables for debugging purpose
    debug { process.beforeScript = 'env' }

    // Tell the pipe to use docker (you must have docker installed)
    docker {
        docker.enabled = true
        includeConfig "$baseDir/config/softwares.config"
        docker.runOptions='-u "$( id -u ):$( id -g )"'
    }
    // Tell the pipe to use singularity (you must have singularity installed)
    singularity {
        singularity.enabled = true
        includeConfig "$baseDir/config/softwares.config"
    }
    local {
        includeConfig "$baseDir/config/ressources/local.config"
    }

}

resume = true

timeline {
    enabled = true
    file = "${params.pipeline_report}/execution_timeline.html"
}

report {
    enabled = true
    file = "${params.pipeline_report}/execution_report.html"
}

trace {
    enabled = true
    file = "${params.pipeline_report}/execution_trace.txt"
}

dag {
    enabled = true
    file = "${params.pipeline_report}/pipeline_dag.svg"
}
